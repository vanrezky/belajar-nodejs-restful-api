{
    "openapi": "3.0.3",
    "info": {
        "title": "Contact API Spec",
        "description": "Contact API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:3000/api/contacts"
        }
    ],
    "paths": {
        "/": {
            "get": {
                "summary": "Search Contact API",
                "description": "Search contact user",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "firt name or last name of contact using like",
                        "schema": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email of contact using like",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "phone of contact using like",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "size of page",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get All Contact",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Get all contacts successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "oneOf": [
                                                    {
                                                        "$ref": "#/components/schemas/DataResponse"
                                                    }
                                                ]
                                            }
                                        },
                                        "paging": {
                                            "type": "object",
                                            "properties": {
                                                "page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "size": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 30
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create Contact API",
                "description": "Create New Contact",
                "requestBody": {
                    "$ref": "#/components/requestBodies/FormContact"
                },
                "responses": {
                    "200": {
                        "description": "Contact created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DataResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Validation error!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/{id}": {
            "get": {
                "summary": "Get contact API",
                "description": "Get contact by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the contact to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get contact by ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update contact API",
                "description": "Update contact by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the contact to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],

                "requestBody": {
                    "$ref": "#/components/requestBodies/FormContact"
                },
                "responses": {
                    "200": {
                        "description": "Contact updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact updated"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DataResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "summary": "Delete contact API",
                "description": "Delete contact by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the contact to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Deleted contact successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        }
    },

    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization",
                "description": "Enter token"
            }
        },
        "requestBodies": {
            "FormContact": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "first_name": {
                                    "$ref": "#/components/schemas/FirstNameProperty"
                                },
                                "last_name": {
                                    "$ref": "#/components/schemas/LastNameProperty"
                                },
                                "email": {
                                    "$ref": "#/components/schemas/EmailProperty"
                                },
                                "phone": {
                                    "$ref": "#/components/schemas/PhoneProperty"
                                }
                            }
                        }
                    }
                }
            }
        },
        "schemas": {
            "FirstNameProperty": {
                "type": "string",
                "maxLength": 100,
                "example": "Van"
            },
            "LastNameProperty": {
                "type": "string",
                "maxLength": 100,
                "example": "Nababan"
            },
            "EmailProperty": {
                "type": "string",
                "maxLength": 100,
                "example": "vanrezky@gmail.com"
            },
            "PhoneProperty": {
                "type": "number",
                "maxLength": 20,
                "example": "62822682610123",
                "nullable": true
            },
            "DataResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "$ref": "#/components/schemas/FirstNameProperty"
                    },
                    "last_name": {
                        "$ref": "#/components/schemas/LastNameProperty"
                    },
                    "email": {
                        "$ref": "#/components/schemas/EmailProperty"
                    },
                    "phone": {
                        "$ref": "#/components/schemas/PhoneProperty"
                    }
                }
            },
            "ValidationErrorResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Validation error"
                    },
                    "errors": {
                        "type": "object",
                        "example": {
                            "first_name": "Maximum first name is 100 characters"
                        }
                    }
                }
            },
            "UnauthorizedResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Unauthorized"
                    }
                }
            },
            "NotFoundResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Contact not found"
                    },
                    "errors": {
                        "type": "object"
                    }
                }
            }
        }
    }
}
